diff --git a/src/lib_signer_backends/unix/ledger.ml b/src/lib_signer_backends/unix/ledger.ml
index 280ab4e..5b1ea15 100644
--- a/src/lib_signer_backends/unix/ledger.ml
+++ b/src/lib_signer_backends/unix/ledger.ml
@@ -287,26 +287,22 @@ module Ledger_commands = struct
       | Ok (path, curve) ->
           return (`Path_curve (path, curve))
 
-  let sign ?watermark ~version hid curve path (base_msg : Bytes.t) =
+  let sign ?watermark ~version:_ hid curve path (base_msg : Bytes.t) =
     let msg =
       Option.unopt_map watermark ~default:base_msg ~f:(fun watermark ->
           Bytes.cat (Signature.bytes_of_watermark watermark) base_msg)
     in
     let path = Bip32_path.tezos_root @ path in
     wrap_ledger_cmd (fun pp ->
-        let {Ledgerwallet_tezos.Version.major; minor; patch; _} = version in
         let open Rresult.R.Infix in
-        if (major, minor, patch) <= (2, 0, 0) then
-          Ledgerwallet_tezos.sign ~pp hid curve path (Cstruct.of_bytes msg)
-          >>= fun s -> Ok (None, s)
-        else
-          Ledgerwallet_tezos.sign_and_hash
+          Ledgerwallet_tezos.sign
             ~pp
+            ~hash_on_ledger:false
             hid
             curve
             path
-            (Cstruct.of_bytes msg)
-          >>= fun (h, s) -> Ok (Some h, s))
+            (Cstruct.of_bytes (Blake2B.to_bytes (Blake2B.hash_bytes [msg])))
+          >>= fun s -> Ok (None, s))
     >>=? fun (hash_opt, signature) ->
     ( match hash_opt with
     | None ->
