# SPDX-FileCopyrightText: 2019 Bitcoin Suisse
# SPDX-License-Identifier: LicenseRef-Proprietary

env:
  NIX_PATH: nixpkgs=channel:nixos-unstable
  test_step: "test && weeder && bats"
  crossref_verify: "nix run -f https://github.com/serokell/crossref-verifier/archive/f97ded8356e5afe4d3ebdeaccd4eed504bb99b0f.tar.gz -c crossref-verify --mode local-only"

steps:
 - command: nix run nixpkgs.{gnumake,hlint,ncurses} -c make lint
   label: make lint
   branches: !autodoc/master
 - command: nix run nixpkgs.reuse -c reuse lint
   label: reuse lint
   branches: !autodoc/master
 - command: .buildkite/check-trailing-whitespace.sh
   branches: !autodoc/master
 - command: nix-shell --run "${crossref_verify} --config ./.crossref-verifier.yaml"
   label: crossref-verify
   soft_fail: true
   branches: !autodoc/master
 - commands:
   - nix-shell --run "make test-ci"
   - echo +++ Weeder
   - nix-shell --run "nix run nixpkgs.haskellPackages.weeder -c weeder ."
   - echo +++ Bats
   - nix-shell --run "nix run nixpkgs.bats -c bats bats/*.bats"
   - echo 'bats passed successfully'
   - echo +++ Smoke
   - nix-shell --run "nix run nixpkgs.python3 -c bash scripts/ci-test.sh"
   - echo 'ci-test passed successfully'
   - nix-shell --run "stack exec tzbtc printContractDoc > TZBTC-contract.md"
   label: ${test_step}
   artifact_paths:
     - "TZBTC-contract.md"
   branches: !autodoc/master

 - commands:
   - nix-shell --run "mkdir tmp"
   - nix-shell --run "buildkite-agent artifact download TZBTC-contract.md tmp/ --step \"${test_step}\""
   - nix-shell --run "${crossref_verify} --config ./.crossref-verifier.yaml --root tmp"
   label: crossref-verify generated doc
   branches: !autodoc/master

 - commands:
   - nix-shell --run "mkdir tmp"
   - nix-shell --run "buildkite-agent artifact download TZBTC-contract.md tmp/ --step \"${test_step}\""
   - ./scripts/ci/upload-autodoc.sh
   label: autodoc upload
   branches: master

 - commands:
   - nix-build release.nix -A tezos-client-mainnet -o tezos-client-mainnet
   - nix-build release.nix -A tezos-client-babylonnet -o tezos-client-babylonnet
   label: patched tezos-client building
   artifact_paths:
     - ./tezos-client-mainnet/*
     - ./tezos-client-babylonnet/*

 - commands:
   - nix-build release.nix -A static -o tzbtc-static
   - nix-build release.nix -A deb -o tzbtc-client-deb
   - nix-build release.nix -A rpm -o tzbtc-client-rpm
   label: packaging
   branches: master
   artifact_paths:
     - ./tzbtc-static/bin/tzbtc-client
     - ./tzbtc-client-deb/*
     - ./tzbtc-client-rpm/*
